version: '3.9'

# ===================================================================
# LINUX PRODUCTION: Uses prebuilt images from Docker Hub
# Backend runs in host network to access host Ollama at 11434
# ===================================================================
# Requirements on host:
#   - Ollama installed and running: http://localhost:11434
#   - Models pulled: e.g., `ollama pull llama3.2:1b`
#
# Run:
#   cd infra
#   docker compose -f docker-compose.linux.prod.yml up -d
# ===================================================================

services:
  mongo:
    image: mongo:7
    container_name: rag_mongo
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - rag_net

  qdrant:
    image: qdrant/qdrant:v1.7.0
    container_name: rag_qdrant
    ports:
      - '6333:6333'
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag_net

  redis:
    image: redis:7-alpine
    container_name: rag_redis
    ports:
      - '6379:6379'
    networks:
      - rag_net

  embedder:
    image: whispernet/embedder-service:latest
    container_name: rag_embedder
    ports:
      - '9100:9100'
    networks:
      - rag_net

  backend:
    image: whispernet/backend-service:latest
    container_name: rag_backend
    network_mode: host
    environment:
      - API_PORT=8000
      - LOG_LEVEL=info
      - MONGO_URI=mongodb://localhost:27017
      - MONGO_DB=rag
      - QDRANT_URL=http://localhost:6333
      - REDIS_URL=redis://localhost:6379
      - OLLAMA_BASE_URL=http://localhost:11434
      - SKIP_OLLAMA_READY_CHECK=false
      - EMBEDDER_URL=http://localhost:9100
      - RATE_LIMIT_WINDOW_MS=60000
      - RATE_LIMIT_MAX=120
    depends_on:
      - mongo
      - qdrant
      - redis
      - embedder

  frontend:
    image: whispernet/frontend-service:latest
    container_name: rag_frontend
    ports:
      - '8080:80'
    networks:
      - rag_net
    depends_on:
      - backend

volumes:
  mongo_data:
  qdrant_data:

networks:
  rag_net:
    driver: bridge
